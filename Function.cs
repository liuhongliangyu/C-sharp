# 函数
## 函数概念
函数就是定义在类中具有特定功能的一段独立小程序。

函数也称为方法。
## 函数的定义
函数可以帮助我们把功能性、逻辑性的代码进行封装，从而实现重复调用，提高了程序的复用性和效率。
```C#
定义函数的格式：
修饰符 返回值类型 函数名(参数类型 形式参数1, 参数类型 形式参数2, ..., 参数类型 形式参数n)
{
  执行语句;
  return 返回值;
}
```
在函数中，我们要知道每一个组成元素的意义，才能更明确的定义函数：

* 修饰符：修饰这是个什么样的函数，可以有多个修饰符。
* 返回值类型：取决于返回值的类型。
* 函数名：函数的名字，一定要按照命名规范起名，表明函数的作用。
* 参数列表（小括号中的内容）：定义这个函数所需要的参与运算的未知数据，并且每一个数据都要有相应的数据类型，可以理解为变量。
* return：表示将返回值返回的动作，会把返回值返回到调用者；同时还能结束函数功能。
* 返回值：表示这个函数运行后最后的结果。

## 函数的用法
当函数定义完成后，就可以调用这个函数执行一定的功能。那么如何调用函数？
```C#
class Demo
{
  static void Main(string[] args)
  {
    int sum = Add(3, 4);  //调用函数，并传入3和4两个值。把得到的返回值赋值给另一个变量。
    Console.WriteLine(sum);
  }

//定义函数，具有算两个任意整数和的功能。
  static void Add(int a, int b)
  {
    return a + b; //因为有返回值，会把最后结果返回给调用者。
  }
}
```
**注意：函数的返回值有无要根据函数具体功能而定，如果没有返回值，那么返回值类型要写void，void也是关键字。**
```C#
class Demo
{
  static void Main(string[] args)
  {
    Print();//调用函数，直接打印hello world
  }
  
  static void Print()  //函数也可以不放参数
  {
    System.Console.WriteLine("hello world");
  }
}
```
## 函数特点
* 定义函数可以将功能代码进行封装。
* 定义函数便于对该功能进行复用。
* 函数的出现提高了代码的复用性。
* 函数只有被调用才会执行。
* 如果函数没有具体返回值，返回值类型用关键字void表示。 那么函数中的return语句可以省略不写。
* return有两个作用：1，返回值。2，结束函数功能。

**函数中只能调用其他函数，不能在函数内定义函数。**

**定义函数时，函数的结果应该返回给调用者，交给调用者处理。**
## 函数的重载
* 函数重载的概念：重载（overload）：同一个类中允许存在一个以上的同名函数，只要他们的参数个数或者参数类型不同即可。

* 函数重载的表现形式：
```C#
public int add (int x, int y)
{
  return x + y;
}

//获取两个小数的和
public double add (double x, double y)
{
  return x + y;
}

//获取三个整数的和
public int add (int x, int y, int z)
{
  return x + y + z;
}

注意，以上必须要出现在同一个类中，才可以叫重载。
```
* 重载提高了程序开发的效率，明确了方法的命名。

